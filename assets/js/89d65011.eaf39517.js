"use strict";(self.webpackChunkmy_website_2=self.webpackChunkmy_website_2||[]).push([[8151],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},v=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(r),v=a,m=u["".concat(c,".").concat(v)]||u[v]||g[v]||i;return r?n.createElement(m,o(o({ref:t},p),{},{components:r})):n.createElement(m,o({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=v;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}v.displayName="MDXCreateElement"},8676:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const i={slug:"vectorizing",title:"From Images to Vector Art - Laser Cutting with Midjourney and AI Upscaling",authors:"ecolazy",tags:["hello","docusaurus"]},o="De l'Image \xe0 l'Art Vectoriel : D\xe9coupe Laser avec Midjourney et Augmentation avec l'IA Topaz Gigapixel",l={permalink:"/blog/vectorizing",editUrl:"https://github.com/ecolazy/blog/2023-07-29-vectorizing.md",source:"@site/blog/2023-07-29-vectorizing.md",title:"From Images to Vector Art - Laser Cutting with Midjourney and AI Upscaling",description:"\xc9tape 1 : G\xe9n\xe9rer une image avec Midjourney",date:"2023-07-29T00:00:00.000Z",formattedDate:"July 29, 2023",tags:[{label:"hello",permalink:"/blog/tags/hello"},{label:"docusaurus",permalink:"/blog/tags/docusaurus"}],readingTime:.84,hasTruncateMarker:!1,authors:[{name:"ecolazy",title:"Maintainer",url:"https://ecolazy.github.io",key:"ecolazy"}],frontMatter:{slug:"vectorizing",title:"From Images to Vector Art - Laser Cutting with Midjourney and AI Upscaling",authors:"ecolazy",tags:["hello","docusaurus"]},nextItem:{title:"Int\xe9gration Innovante - Concevoir des Concepts Architecturaux Fonctionnels avec des Syst\xe8mes Visibles",permalink:"/blog/whole-design"}},c={authorsImageUrls:[void 0]},s=[{value:"\xc9tape 1 : G\xe9n\xe9rer une image avec Midjourney",id:"\xe9tape-1--g\xe9n\xe9rer-une-image-avec-midjourney",level:2},{value:"\xc9tape 2 : Augmenter la r\xe9solution avec Topaz Gigapixel AI",id:"\xe9tape-2--augmenter-la-r\xe9solution-avec-topaz-gigapixel-ai",level:2},{value:"\xc9tape 3 : Vectoriser en lot avec l&#39;API vectorizer.ai",id:"\xe9tape-3--vectoriser-en-lot-avec-lapi-vectorizerai",level:2},{value:"Step 1: Generate image with Midjourney",id:"step-1-generate-image-with-midjourney",level:2},{value:"Step 2: Upscale with Topaz Gigapixel AI",id:"step-2-upscale-with-topaz-gigapixel-ai",level:2},{value:"Step 3: Batch vectorize with vectorizer.ai API",id:"step-3-batch-vectorize-with-vectorizerai-api",level:2}],p={toc:s};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"\xe9tape-1--g\xe9n\xe9rer-une-image-avec-midjourney"},"\xc9tape 1 : G\xe9n\xe9rer une image avec Midjourney"),(0,a.kt)("p",null,"Indication : Peter Pan's Londres, silhouette noire de b\xe2timents victoriens, buissons occasionnels poussant depuis les b\xe2timents, Big Ben --ar 3:1"),(0,a.kt)("h2",{id:"\xe9tape-2--augmenter-la-r\xe9solution-avec-topaz-gigapixel-ai"},"\xc9tape 2 : Augmenter la r\xe9solution avec Topaz Gigapixel AI"),(0,a.kt)("h2",{id:"\xe9tape-3--vectoriser-en-lot-avec-lapi-vectorizerai"},"\xc9tape 3 : Vectoriser en lot avec l'API vectorizer.ai"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'#!/bin/bash\nmkdir vectorized_svg\n\nfor file in *.png; do\n  echo "Vectorizing $file to SVG"\n  curl https://vectorizer.ai/api/v1/vectorize \\\n   -u vkvd3ncf3r38bkb:9pakh378atnl4j8elc9mlnugr1f3kbjov77fo1qfa8a6g53su5k0 \\\n   -F image=@$file \\\n   -F "processing.max_colors=2" \\\n   -o vectorized_svg/$(basename $file).svg\ndone\n\n\n')),(0,a.kt)("h1",{id:"from-images-to-vector-art-laser-cutting-with-midjourney-and-ai-upscaling"},"From Images to Vector Art: Laser Cutting with Midjourney and AI Upscaling"),(0,a.kt)("h2",{id:"step-1-generate-image-with-midjourney"},"Step 1: Generate image with Midjourney"),(0,a.kt)("p",null,"Prompt: peter pans london, black silhouette of victorian buildings, occasional shrubs growing from buildings, big ben --ar 3:1"),(0,a.kt)("h2",{id:"step-2-upscale-with-topaz-gigapixel-ai"},"Step 2: Upscale with Topaz Gigapixel AI"),(0,a.kt)("h2",{id:"step-3-batch-vectorize-with-vectorizerai-api"},"Step 3: Batch vectorize with vectorizer.ai API"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'#!/bin/bash\nmkdir vectorized_svg\n\nfor file in *.png; do\n  echo "Vectorizing $file to SVG"\n  curl https://vectorizer.ai/api/v1/vectorize \\\n   -u vkvd3ncf3r38bkb:9pakh378atnl4j8elc9mlnugr1f3kbjov77fo1qfa8a6g53su5k0 \\\n   -F image=@$file \\\n   -F "processing.max_colors=2" \\\n   -o vectorized_svg/$(basename $file).svg\ndone\n\n\n')))}u.isMDXComponent=!0}}]);