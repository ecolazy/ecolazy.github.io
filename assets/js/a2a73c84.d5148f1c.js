"use strict";(self.webpackChunkmy_website_2=self.webpackChunkmy_website_2||[]).push([[6951],{3905:(e,r,n)=>{n.d(r,{Zo:()=>u,kt:()=>h});var i=n(7294);function t(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);r&&(i=i.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){t(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function s(e,r){if(null==e)return{};var n,i,t=function(e,r){if(null==e)return{};var n,i,t={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],r.indexOf(n)>=0||(t[n]=e[n]);return t}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var l=i.createContext({}),c=function(e){var r=i.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):o(o({},r),e)),n},u=function(e){var r=c(e.components);return i.createElement(l.Provider,{value:r},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return i.createElement(i.Fragment,{},r)}},m=i.forwardRef((function(e,r){var n=e.components,t=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=t,h=p["".concat(l,".").concat(m)]||p[m]||d[m]||a;return n?i.createElement(h,o(o({ref:r},u),{},{components:n})):i.createElement(h,o({ref:r},u))}));function h(e,r){var n=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var a=n.length,o=new Array(a);o[0]=m;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s[p]="string"==typeof e?e:t,o[1]=s;for(var c=2;c<a;c++)o[c]=n[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1770:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var i=n(7462),t=(n(7294),n(3905));const a={sidebar_position:7},o="Wildlife corridor overview",s={unversionedId:"geospatial-analysis/postgis-data-management-and-queries/wildlife-corridors-overview",id:"geospatial-analysis/postgis-data-management-and-queries/wildlife-corridors-overview",title:"Wildlife corridor overview",description:"- Identify areas of high connectivity between different land cover types, such as forests and grasslands. These areas are likely to be used by wildlife as corridors for movement.",source:"@site/docs/geospatial-analysis/postgis-data-management-and-queries/wildlife-corridors-overview.md",sourceDirName:"geospatial-analysis/postgis-data-management-and-queries",slug:"/geospatial-analysis/postgis-data-management-and-queries/wildlife-corridors-overview",permalink:"/docs/geospatial-analysis/postgis-data-management-and-queries/wildlife-corridors-overview",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Microclimates",permalink:"/docs/geospatial-analysis/postgis-data-management-and-queries/query-microclimates"},next:{title:"Publishing maps with Leaflet",permalink:"/docs/category/publishing-maps-with-leaflet"}},l={},c=[{value:"Show column names",id:"show-column-names",level:3},{value:"Show entries in descriptivegroup column",id:"show-entries-in-descriptivegroup-column",level:3},{value:"Show entries in column which match Natural Environment in descriptivegroup column",id:"show-entries-in-column-which-match-natural-environment-in-descriptivegroup-column",level:3},{value:"Show entries in column which match Road in descriptivegroup column",id:"show-entries-in-column-which-match-road-in-descriptivegroup-column",level:3},{value:"Show entries in column which match Building in descriptivegroup column",id:"show-entries-in-column-which-match-building-in-descriptivegroup-column",level:3},{value:"References",id:"references",level:2}],u={toc:c};function p(e){let{components:r,...n}=e;return(0,t.kt)("wrapper",(0,i.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"wildlife-corridor-overview"},"Wildlife corridor overview"),(0,t.kt)("h1",{id:"aims"},"Aims"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"Identify areas of high connectivity between different land cover types, such as forests and grasslands. These areas are likely to be used by wildlife as corridors for movement.")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("p",{parentName:"li"},"Identify potential barriers to wildlife movement, such as roads or urban areas"))),(0,t.kt)("h3",{id:"show-column-names"},"Show column names"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT COLUMN_NAME\nFROM INFORMATION_SCHEMA.COLUMNS\nWHERE TABLE_NAME = 'topographicarea'\n")),(0,t.kt)("h3",{id:"show-entries-in-descriptivegroup-column"},"Show entries in descriptivegroup column"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT descriptivegroup\nFROM topographicarea\n")),(0,t.kt)("h3",{id:"show-entries-in-column-which-match-natural-environment-in-descriptivegroup-column"},"Show entries in column which match Natural Environment in descriptivegroup column"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT *\nFROM topographicarea\nWHERE 'Natural Environment' = ANY (descriptivegroup)\n")),(0,t.kt)("h3",{id:"show-entries-in-column-which-match-road-in-descriptivegroup-column"},"Show entries in column which match Road in descriptivegroup column"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT *\nFROM topographicarea\nWHERE 'Road' = ANY (descriptiveterm)\n")),(0,t.kt)("h3",{id:"show-entries-in-column-which-match-building-in-descriptivegroup-column"},"Show entries in column which match Building in descriptivegroup column"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT *\nFROM topographicarea\nWHERE 'Building' = ANY (descriptivegroup)\n")),(0,t.kt)("h2",{id:"references"},"References"))}p.isMDXComponent=!0}}]);