"use strict";(self.webpackChunkmy_website_2=self.webpackChunkmy_website_2||[]).push([[7605],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>h});var o=r(7294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,o,s=function(e,t){if(null==e)return{};var r,o,s={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var i=o.createContext({}),p=function(e){var t=o.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=p(e.components);return o.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var r=e.components,s=e.mdxType,n=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(r),m=s,h=u["".concat(i,".").concat(m)]||u[m]||d[m]||n;return r?o.createElement(h,a(a({ref:t},l),{},{components:r})):o.createElement(h,a({ref:t},l))}));function h(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var n=r.length,a=new Array(n);a[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[u]="string"==typeof e?e:s,a[1]=c;for(var p=2;p<n;p++)a[p]=r[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5799:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>n,metadata:()=>c,toc:()=>p});var o=r(7462),s=(r(7294),r(3905));const n={slug:"mastermap-on-aws-arm64",title:"mastermap on aws arm64",authors:"ecolazy",tags:["hello","docusaurus"]},a="1. CONNECT TO AWS SERVER",c={permalink:"/blog/mastermap-on-aws-arm64",editUrl:"https://github.com/ecolazy/blog/2023-08-12-mastermap-on-aws-arm64.md",source:"@site/blog/2023-08-12-mastermap-on-aws-arm64.md",title:"mastermap on aws arm64",description:'ssh -i "$HOME/.ssh/key.pem" ubuntu@ec2-123.eu-north-1.compute.amazonaws.com',date:"2023-08-12T00:00:00.000Z",formattedDate:"August 12, 2023",tags:[{label:"hello",permalink:"/blog/tags/hello"},{label:"docusaurus",permalink:"/blog/tags/docusaurus"}],readingTime:1.83,hasTruncateMarker:!1,authors:[{name:"ecolazy",title:"Maintainer",url:"https://ecolazy.github.io",key:"ecolazy"}],frontMatter:{slug:"mastermap-on-aws-arm64",title:"mastermap on aws arm64",authors:"ecolazy",tags:["hello","docusaurus"]},nextItem:{title:"From Images to Vector Art - Laser Cutting with Midjourney and AI Upscaling",permalink:"/blog/vectorizing"}},i={authorsImageUrls:[void 0]},p=[],l={toc:p};function u(e){let{components:t,...r}=e;return(0,s.kt)("wrapper",(0,o.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,'ssh -i "$HOME/.ssh/key.pem" ',(0,s.kt)("a",{parentName:"p",href:"mailto:ubuntu@ec2-123.eu-north-1.compute.amazonaws.com"},"ubuntu@ec2-123.eu-north-1.compute.amazonaws.com")),(0,s.kt)("h1",{id:"2-install-required-software"},"2. INSTALL REQUIRED SOFTWARE"),(0,s.kt)("p",null,"sudo apt update\nsudo apt install docker.io\nsudo apt install certbot python3-certbot-nginx"),(0,s.kt)("h1",{id:"3-setup-directory-for-postgres-data"},"3. SETUP DIRECTORY FOR POSTGRES DATA"),(0,s.kt)("p",null,"mkdir ~/data-volume"),(0,s.kt)("h1",{id:"4-transfer-files-from-laptop-to-server"},"4. TRANSFER FILES FROM LAPTOP TO SERVER"),(0,s.kt)("h1",{id:"execute-this-command-from-the-local-machine-not-inside-the-ssh-session"},"(Execute this command from the local machine, not inside the SSH session)"),(0,s.kt)("p",null,"scp -i  /Users/reuben/.ssh/key.pem -r /Volumes/GoogleDrive/My\\ Drive/Loader ",(0,s.kt)("a",{parentName:"p",href:"mailto:ubuntu@ec2-123.eu-north-1.compute.amazonaws.com"},"ubuntu@ec2-123.eu-north-1.compute.amazonaws.com"),":/home/ubuntu/"),(0,s.kt)("h1",{id:"5-configure-loader"},"5. CONFIGURE LOADER"),(0,s.kt)("h1",{id:"ensure-to-modify-the-loaderconfig-parameters-accordingly"},"Ensure to modify the loader.config parameters accordingly"),(0,s.kt)("p",null,"ogr_cmd=ogr2ogr --config GML_EXPOSE_FID NO -append -skipfailures -f PostgreSQL PG:'dbname=postgres active_schema=public host=postgis user=postgres password=p sslmode=require' $file_path"),(0,s.kt)("h1",{id:"run-the-loader-script"},"Run the loader script"),(0,s.kt)("p",null,"python loader.py config.loader"),(0,s.kt)("h1",{id:"6-dns-configuration"},"6. DNS CONFIGURATION"),(0,s.kt)("h1",{id:"log-into-domain-name-provider-manually-and-add-an-www-a-name-record-for-instance-ip"},"Log into domain name provider manually and add an www A name record for instance IP."),(0,s.kt)("h1",{id:"7-aws-security-groups"},"7. AWS SECURITY GROUPS"),(0,s.kt)("h1",{id:"open-port-443-and-port-80-for-the-instance-via-the-aws-console"},"Open port 443 and port 80 for the instance via the AWS console."),(0,s.kt)("h1",{id:"8-certbot-setup"},"8. CERTBOT SETUP"),(0,s.kt)("p",null,"sudo certbot certonly --nginx -d ecolazy.co.uk"),(0,s.kt)("h1",{id:"add-a-cron-job-for-auto-renewal-of-the-certificate"},"Add a cron job for auto-renewal of the certificate"),(0,s.kt)("p",null,'(sudo crontab -l 2>/dev/null; echo "15 3 * * * /usr/bin/certbot renew --quiet") | sudo crontab -'),(0,s.kt)("h1",{id:"9-docker-setup"},"9. DOCKER SETUP"),(0,s.kt)("p",null,'sudo docker run -d \\\n-p 5432:5432 \\\n--name "postgis" \\\n--restart unless-stopped \\\n-v $HOME/data-volume:/var/lib/postgresql \\\n-v /etc/letsencrypt:/etc/letsencrypt:ro \\\n-e POSTGRES_PASSWORD=p \\\n-e POSTGRES_USER=postgres \\\n-e POSTGRES_DB=postgres \\\ntobi312/rpi-postgresql-postgis:14-3.3-alpine-arm64'),(0,s.kt)("h1",{id:"10-postgres-ssl-configuration"},"10. POSTGRES SSL CONFIGURATION"),(0,s.kt)("h1",{id:"first-ensure-the-postgres-directory-for-certs-exists"},"First, ensure the Postgres directory for certs exists"),(0,s.kt)("p",null,"mkdir -p /etc/postgres-certs"),(0,s.kt)("h1",{id:"create-a-script-to-update-and-set-permissions-for-postgres-certificates"},"Create a script to update and set permissions for Postgres certificates"),(0,s.kt)("p",null,"cat > update_postgres_certs.sh <<EOF\n#!/bin/bash\ncp /etc/letsencrypt/live/ecolazy.co.uk/fullchain.pem /etc/postgres-certs/\ncp /etc/letsencrypt/live/ecolazy.co.uk/privkey.pem /etc/postgres-certs/\nchown postgres:postgres /etc/postgres-certs/*\nchmod 600 /etc/postgres-certs/privkey.pem\nchmod 644 /etc/postgres-certs/fullchain.pem\nEOF"),(0,s.kt)("p",null,"chmod +x update_postgres_certs.sh"),(0,s.kt)("h1",{id:"create-a-script-for-the-certbot-post-hook"},"Create a script for the Certbot post-hook"),(0,s.kt)("p",null,"cat > certbot_post_hook.sh <<EOF\n#!/bin/bash\ndocker exec postgis /update_postgres_certs.sh\ndocker restart postgis\nEOF"),(0,s.kt)("p",null,"chmod +x certbot_post_hook.sh"),(0,s.kt)("p",null,'sudo certbot renew --post-hook "/home/ubuntu/certbot_post_hook.sh"'),(0,s.kt)("h1",{id:"adjust-postgres-configuration-inside-the-container"},"Adjust Postgres configuration inside the container"),(0,s.kt)("p",null,'sudo docker exec -it postgis bash -c "echo \\"ssl_cert_file = \'/etc/postgres-certs/fullchain.pem\'\\" >> /var/lib/postgresql/data/postgresql.conf"\nsudo docker exec -it postgis bash -c "echo \\"ssl_key_file = \'/etc/postgres-certs/privkey.pem\'\\" >> /var/lib/postgresql/data/postgresql.conf"\nsudo docker exec -it postgis bash -c "echo \\"hostssl all all 0.0.0.0/0 md5\\" >> /var/lib/postgresql/data/pg_hba.conf"'),(0,s.kt)("h1",{id:"restart-the-postgis-container"},"Restart the PostGIS container"),(0,s.kt)("p",null,"sudo docker restart postgis"),(0,s.kt)("h1",{id:"11-test"},"11. TEST"),(0,s.kt)("h1",{id:"use-the-provided-credentials-to-test-the-connection"},"Use the provided credentials to test the connection"),(0,s.kt)("p",null,'psql "host=host port=5432 dbname=postgres user=postgres sslmode=require" # Enter password when prompted'))}u.isMDXComponent=!0}}]);